<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Modality extends \AppBundle\Entity\Modality implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'nameEquip', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'installedRoom', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'aquisitionDate', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'serialNumber', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'vendor', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'installationDate', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'tubeInstallation', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'stationAeTitle', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'idUnit'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'nameEquip', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'installedRoom', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'aquisitionDate', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'serialNumber', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'vendor', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'installationDate', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'tubeInstallation', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'stationAeTitle', '' . "\0" . 'AppBundle\\Entity\\Modality' . "\0" . 'idUnit'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Modality $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameEquip($nameEquip)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameEquip', [$nameEquip]);

        return parent::setNameEquip($nameEquip);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameEquip()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameEquip', []);

        return parent::getNameEquip();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstalledRoom($installedRoom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstalledRoom', [$installedRoom]);

        return parent::setInstalledRoom($installedRoom);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstalledRoom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstalledRoom', []);

        return parent::getInstalledRoom();
    }

    /**
     * {@inheritDoc}
     */
    public function setAquisitionDate($aquisitionDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAquisitionDate', [$aquisitionDate]);

        return parent::setAquisitionDate($aquisitionDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAquisitionDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAquisitionDate', []);

        return parent::getAquisitionDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setSerialNumber($serialNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerialNumber', [$serialNumber]);

        return parent::setSerialNumber($serialNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerialNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerialNumber', []);

        return parent::getSerialNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendor($vendor)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendor', [$vendor]);

        return parent::setVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendor', []);

        return parent::getVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setInstallationDate($installationDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInstallationDate', [$installationDate]);

        return parent::setInstallationDate($installationDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getInstallationDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInstallationDate', []);

        return parent::getInstallationDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setTubeInstallation($tubeInstallation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTubeInstallation', [$tubeInstallation]);

        return parent::setTubeInstallation($tubeInstallation);
    }

    /**
     * {@inheritDoc}
     */
    public function getTubeInstallation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTubeInstallation', []);

        return parent::getTubeInstallation();
    }

    /**
     * {@inheritDoc}
     */
    public function setStationAeTitle($stationAeTitle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStationAeTitle', [$stationAeTitle]);

        return parent::setStationAeTitle($stationAeTitle);
    }

    /**
     * {@inheritDoc}
     */
    public function getStationAeTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStationAeTitle', []);

        return parent::getStationAeTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdUnit(\AppBundle\Entity\Unit $idUnit = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdUnit', [$idUnit]);

        return parent::setIdUnit($idUnit);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdUnit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdUnit', []);

        return parent::getIdUnit();
    }

}
